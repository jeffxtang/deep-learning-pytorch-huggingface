# Model arguments
#model_name_or_path: Qwen/Qwen2.5-3B-Instruct
model_name_or_path: meta-llama/Llama-3.2-3B-Instruct
model_revision: main
torch_dtype: bfloat16
attn_implementation: flash_attention_2
bf16: true
tf32: true
#output_dir: runs/qwen-2.5-3b-r1-countdown
output_dir: runs/llama-3.2-3b-r1-sep15

# Dataset arguments
dataset_id_or_path: Jiayi-Pan/Countdown-Tasks-3to4

# Lora Arguments
# No LoRA is used here

# Training arguments
max_steps: 200 #200 #450 # 1500 # 1700
per_device_train_batch_size: 1
gradient_accumulation_steps: 8
gradient_checkpointing: true
gradient_checkpointing_kwargs:
  use_reentrant: false
learning_rate: 5.0e-7 # 1.0e-6 as in the deepseek math paper 5-e7 from https://hijkzzz.notion.site/unraveling-rlhf-and-its-variants-engineering-insights#147d9a33ecc9806090f3d5c749d31f05
lr_scheduler_type: cosine
warmup_ratio: 0.03
# GRPO specific parameters
beta: 0.001 # 0.04 as in the deepseek math paper 0.001 from https://hijkzzz.notion.site/unraveling-rlhf-and-its-variants-engineering-insights#147d9a33ecc9806090f3d5c749d31f05
max_prompt_length: 256
max_completion_length: 1024
num_generations: 8
use_vllm: true

vllm_device: "cuda:0" # use vLLM for generation and DeepSpeed for distributed training.
# Set the num_processes to the number of GPUs you have -
# the last one will be used with vLLM for Generation.
# if you have 6 GPUs, set vllm_device to "cuda:5" (or 5?) and
# num_processes to 5 (or 6? in which case, 6th GPU will be used
# for both generation and training

vllm_gpu_memory_utilization: 0.5

# Logging arguments
logging_strategy: steps
logging_steps: 2
report_to:
- tensorboard
save_strategy: "steps"
save_steps: 500 # 250 # was 25
seed: 42

# Hugging Face Hub
push_to_hub: true
  # hub_model_id: llama-3-1-8b-math-orca-qlora-10k-ep1 # if not defined same as output_dir
hub_strategy: every_save
